# 1 Geef pipeline een naam

name: CI/CD Demo Pipeline Github Actions
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

on:
  # workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build:
    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'PipelineDemo.sln'
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Set up dependency caching for faster builds
      uses: actions/cache@v3
      with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test $SOLUTION --configuration $BUILD_CONFIG --no-restore --no-build --verbosity normal
            --logger "trx;LogFileName=test-results.trx" || true
      continue-on-error: true

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: DotNET Tests
        path: "**/test-results.trx"                            
        reporter: dotnet-trx
        fail-on-error: true
      # continue-on-error: true

    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7133BE11B5C14EC68C55458A0AF970C5 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0C6C9B4C2BDF4B47A80504710BF9A5E6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4F772603AD8A4A14AAD101175F659FA6 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'yck82'
          slot-name: 'Production'
          package: .

   
  



  
    


